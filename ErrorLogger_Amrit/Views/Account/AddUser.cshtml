@*@model DatabaseEntityModel.UserModel
@using DatabaseEntityModel;*@

@model Common.UserAppsModelView

@{
    ViewBag.Title = "AddUser";
}

<h2>Add User</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User Model</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*@Html.HiddenFor(model => model._userId)*@ <!-- it is just checking the User Id; it can't be edited-->

        @*<div class="form-group">
            @Html.LabelFor(model => model._userId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(@model => Model._userId)
            </div>
        </div>*@

        <!-- UserId -->
        @*<div class="form-group">
            @Html.LabelFor(model => model._userId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model._userId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._userId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <!-- Firstname -->
        <div class="form-group">
            @Html.LabelFor(model => model._firstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._firstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._firstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Lastname -->
        <div class="form-group">
            @Html.LabelFor(model => model._lastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._lastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._lastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Email -->
        <div class="form-group">
            @Html.LabelFor(model => model._email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._email, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Password -->
        <div class="form-group">
            @Html.LabelFor(model => model._password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._password, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Confirm Password -->
        @*<div class="form-group">
            @Html.LabelFor(model => model._password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._password, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <!-- Role -->
        @*<div class="form-group">
            @Html.LabelFor(model => model._role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._role, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._role, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <!-- UserStatus -->
        @*<div class="form-group">
            @Html.LabelFor(model => model._userStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._userStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._userStatus, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <!-- LastLoginDate -->
        @*<div class="form-group">
            @Html.LabelFor(model => model._lastLoginDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._lastLoginDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._lastLoginDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <!-- Applications -->
        @*<div class="form-group">
            @Html.LabelFor(model => model.allApplications, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.allApplications, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.allApplications, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Home", "AdminPage", "Account") | 
    @Html.ActionLink("Back", "ViewUsers", "Account")
</div>


